{"version":3,"file":"js/index.899aa172.js","mappings":"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","sources":["webpack://genshin-app/./src/pages/index.vue","webpack://genshin-app/./src/pages/index.vue?0199","webpack://genshin-app/../../src/components/VBreadcrumbs/VBreadcrumbsDivider.tsx","webpack://genshin-app/../../src/components/VBreadcrumbs/VBreadcrumbsItem.tsx","webpack://genshin-app/../../src/components/VBreadcrumbs/VBreadcrumbs.tsx"],"sourcesContent":["import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"d-flex justify-space-between\"\n};\nexport function render(_ctx, _cache) {\n                                                                    \n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_VBreadcrumbs, {\n    items: [{\n      title: 'Главная',\n      disabled: true,\n      href: ''\n    }]\n  })])]);\n}\n\n/* Vuetify */\nimport { VBreadcrumbs as _component_VBreadcrumbs } from \"vuetify/lib/components/VBreadcrumbs/index.mjs\"\n\n","/* unplugin-vue-components disabled */import { render } from \"./index.vue?vue&type=template&id=eff8ae34\"\nconst script = {}\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// Composables\nimport { makeComponentProps } from '@/composables/component'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVBreadcrumbsDividerProps = propsFactory({\n  divider: [Number, String],\n\n  ...makeComponentProps(),\n}, 'VBreadcrumbsDivider')\n\nexport const VBreadcrumbsDivider = genericComponent()({\n  name: 'VBreadcrumbsDivider',\n\n  props: makeVBreadcrumbsDividerProps(),\n\n  setup (props, { slots }) {\n    useRender(() => (\n      <li\n        class={[\n          'v-breadcrumbs-divider',\n          props.class,\n        ]}\n        style={ props.style }\n      >\n        { slots?.default?.() ?? props.divider }\n      </li>\n    ))\n\n    return {}\n  },\n})\n\nexport type VBreadcrumbsDivider = InstanceType<typeof VBreadcrumbsDivider>\n","// Composables\nimport { useTextColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVBreadcrumbsItemProps = propsFactory({\n  active: Boolean,\n  activeClass: String,\n  activeColor: String,\n  color: String,\n  disabled: Boolean,\n  title: String,\n\n  ...makeComponentProps(),\n  ...makeRouterProps(),\n  ...makeTagProps({ tag: 'li' }),\n}, 'VBreadcrumbsItem')\n\nexport const VBreadcrumbsItem = genericComponent()({\n  name: 'VBreadcrumbsItem',\n\n  props: makeVBreadcrumbsItemProps(),\n\n  setup (props, { slots, attrs }) {\n    const link = useLink(props, attrs)\n    const isActive = computed(() => props.active || link.isActive?.value)\n    const color = computed(() => isActive.value ? props.activeColor : props.color)\n\n    const { textColorClasses, textColorStyles } = useTextColor(color)\n\n    useRender(() => {\n      return (\n        <props.tag\n          class={[\n            'v-breadcrumbs-item',\n            {\n              'v-breadcrumbs-item--active': isActive.value,\n              'v-breadcrumbs-item--disabled': props.disabled,\n              [`${props.activeClass}`]: isActive.value && props.activeClass,\n            },\n            textColorClasses.value,\n            props.class,\n          ]}\n          style={[\n            textColorStyles.value,\n            props.style,\n          ]}\n          aria-current={ isActive.value ? 'page' : undefined }\n        >\n          { !link.isLink.value ? slots.default?.() ?? props.title : (\n            <a\n              class=\"v-breadcrumbs-item--link\"\n              href={ link.href.value }\n              aria-current={ isActive.value ? 'page' : undefined }\n              onClick={ link.navigate }\n            >\n              { slots.default?.() ?? props.title }\n            </a>\n          )}\n        </props.tag>\n      )\n    })\n    return {}\n  },\n})\n\nexport type VBreadcrumbsItem = InstanceType<typeof VBreadcrumbsItem>\n","// Styles\nimport './VBreadcrumbs.sass'\n\n// Components\nimport { VBreadcrumbsDivider } from './VBreadcrumbsDivider'\nimport { VBreadcrumbsItem } from './VBreadcrumbsItem'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { useBackgroundColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { IconValue } from '@/composables/icons'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { LinkProps } from '@/composables/router'\nimport type { GenericProps } from '@/util'\n\nexport type BreadcrumbItem = string | (Partial<LinkProps> & {\n  title: string\n  disabled?: boolean\n})\n\nexport const makeVBreadcrumbsProps = propsFactory({\n  activeClass: String,\n  activeColor: String,\n  bgColor: String,\n  color: String,\n  disabled: Boolean,\n  divider: {\n    type: String,\n    default: '/',\n  },\n  icon: IconValue,\n  items: {\n    type: Array as PropType<readonly BreadcrumbItem[]>,\n    default: () => ([]),\n  },\n\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps({ tag: 'ul' }),\n}, 'VBreadcrumbs')\n\nexport const VBreadcrumbs = genericComponent<new <T extends BreadcrumbItem>(\n  props: {\n    items?: T[]\n  },\n  slots: {\n    prepend: never\n    title: { item: T, index: number }\n    divider: { item: T, index: number }\n    item: { item: T, index: number }\n    default: never\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VBreadcrumbs',\n\n  props: makeVBreadcrumbsProps(),\n\n  setup (props, { slots }) {\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'bgColor'))\n    const { densityClasses } = useDensity(props)\n    const { roundedClasses } = useRounded(props)\n\n    provideDefaults({\n      VBreadcrumbsDivider: {\n        divider: toRef(props, 'divider'),\n      },\n      VBreadcrumbsItem: {\n        activeClass: toRef(props, 'activeClass'),\n        activeColor: toRef(props, 'activeColor'),\n        color: toRef(props, 'color'),\n        disabled: toRef(props, 'disabled'),\n      },\n    })\n\n    const items = computed(() => props.items.map(item => {\n      return typeof item === 'string' ? { item: { title: item }, raw: item } : { item, raw: item }\n    }))\n\n    useRender(() => {\n      const hasPrepend = !!(slots.prepend || props.icon)\n\n      return (\n        <props.tag\n          class={[\n            'v-breadcrumbs',\n            backgroundColorClasses.value,\n            densityClasses.value,\n            roundedClasses.value,\n            props.class,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n            props.style,\n          ]}\n        >\n          { hasPrepend && (\n            <li key=\"prepend\" class=\"v-breadcrumbs__prepend\">\n              { !slots.prepend ? (\n                <VIcon\n                  key=\"prepend-icon\"\n                  start\n                  icon={ props.icon }\n                />\n              ) : (\n                <VDefaultsProvider\n                  key=\"prepend-defaults\"\n                  disabled={ !props.icon }\n                  defaults={{\n                    VIcon: {\n                      icon: props.icon,\n                      start: true,\n                    },\n                  }}\n                  v-slots:default={ slots.prepend }\n                />\n              )}\n            </li>\n          )}\n\n          { items.value.map(({ item, raw }, index, array) => (\n            <>\n              { slots.item?.({ item, index }) ?? (\n                <VBreadcrumbsItem\n                  key={ index }\n                  disabled={ index >= array.length - 1 }\n                  { ...(typeof item === 'string' ? { title: item } : item) }\n                  v-slots={{\n                    default: slots.title ? () => slots.title?.({ item, index }) : undefined,\n                  }}\n                />\n              )}\n\n              { index < array.length - 1 && (\n                <VBreadcrumbsDivider\n                  v-slots={{\n                    default: slots.divider ? () => slots.divider?.({ item: raw, index }) : undefined,\n                  }}\n                />\n              )}\n            </>\n          ))}\n\n          { slots.default?.() }\n        </props.tag>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VBreadcrumbs = InstanceType<typeof VBreadcrumbs>\n"],"names":["_hoisted_1","class","render","_ctx","_cache","_","items","title","disabled","href","script","__exports__","makeVBreadcrumbsDividerProps","propsFactory","divider","Number","String","makeComponentProps","VBreadcrumbsDivider","genericComponent","name","props","setup","_ref","slots","useRender","_createVNode","style","default","makeVBreadcrumbsItemProps","active","Boolean","activeClass","activeColor","color","makeRouterProps","makeTagProps","tag","VBreadcrumbsItem","attrs","link","useLink","isActive","computed","value","textColorClasses","textColorStyles","useTextColor","undefined","isLink","navigate","makeVBreadcrumbsProps","bgColor","type","icon","IconValue","Array","makeDensityProps","makeRoundedProps","VBreadcrumbs","backgroundColorClasses","backgroundColorStyles","useBackgroundColor","toRef","densityClasses","useDensity","roundedClasses","useRounded","provideDefaults","map","item","raw","hasPrepend","prepend","VDefaultsProvider","VIcon","start","_ref2","index","array","_Fragment","_mergeProps","length"],"sourceRoot":""}